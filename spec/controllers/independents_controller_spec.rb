require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe IndependentsController do

  def mock_independent(stubs={})
    @mock_independent ||= mock_model(Independent, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all independents as @independents" do
      Independent.stub(:all) { [mock_independent] }
      get :index
      assigns(:independents).should eq([mock_independent])
    end
  end

  describe "GET show" do
    it "assigns the requested independent as @independent" do
      Independent.stub(:find).with("37") { mock_independent }
      get :show, :id => "37"
      assigns(:independent).should be(mock_independent)
    end
  end

  describe "GET new" do
    it "assigns a new independent as @independent" do
      Independent.stub(:new) { mock_independent }
      get :new
      assigns(:independent).should be(mock_independent)
    end
  end

  describe "GET edit" do
    it "assigns the requested independent as @independent" do
      Independent.stub(:find).with("37") { mock_independent }
      get :edit, :id => "37"
      assigns(:independent).should be(mock_independent)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created independent as @independent" do
        Independent.stub(:new).with({'these' => 'params'}) { mock_independent(:save => true) }
        post :create, :independent => {'these' => 'params'}
        assigns(:independent).should be(mock_independent)
      end

      it "redirects to the created independent" do
        Independent.stub(:new) { mock_independent(:save => true) }
        post :create, :independent => {}
        response.should redirect_to(independent_url(mock_independent))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved independent as @independent" do
        Independent.stub(:new).with({'these' => 'params'}) { mock_independent(:save => false) }
        post :create, :independent => {'these' => 'params'}
        assigns(:independent).should be(mock_independent)
      end

      it "re-renders the 'new' template" do
        Independent.stub(:new) { mock_independent(:save => false) }
        post :create, :independent => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested independent" do
        Independent.stub(:find).with("37") { mock_independent }
        mock_independent.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :independent => {'these' => 'params'}
      end

      it "assigns the requested independent as @independent" do
        Independent.stub(:find) { mock_independent(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:independent).should be(mock_independent)
      end

      it "redirects to the independent" do
        Independent.stub(:find) { mock_independent(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(independent_url(mock_independent))
      end
    end

    describe "with invalid params" do
      it "assigns the independent as @independent" do
        Independent.stub(:find) { mock_independent(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:independent).should be(mock_independent)
      end

      it "re-renders the 'edit' template" do
        Independent.stub(:find) { mock_independent(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested independent" do
      Independent.stub(:find).with("37") { mock_independent }
      mock_independent.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the independents list" do
      Independent.stub(:find) { mock_independent }
      delete :destroy, :id => "1"
      response.should redirect_to(independents_url)
    end
  end

end
